name: PBRP Builder 18.04

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'MANIFEST_URL (if want to use SSH keys, use git@github.com:XXXXX)'
        required: true
        default: 'https://github.com/PitchBlackRecoveryProject/manifest_pb'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'andrid-8.1'
      DEVICE_TREE_URL:
        description: 'DEVICE_TREE_URL'
        required: true
        default: 'https://github.com/vados-dev/sl8541e_cus_go'
      DEVICE_TREE_BRANCH:
        description: 'DEVICE_TREE_BRANCH'
        required: true
        default: 'android-8.1'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/sprd/sl8541e_cus_go'
      COMMON_TREE_URL:
        description: 'COMMON_TREE_URL (if no common tree, leave blank)'
        required: false
      COMMON_PATH:
        description: 'COMMON_PATH (if no common tree, leave blank)'
        required: false
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'sl8541e_cus_go'
      MAKEFILE_NAME:
        description: 'MAKEFILE_NAME'
        required: true
        default: 'omni_sl8541e_cus_go'
      CLEANUP:
        description: 'Enable Cleanup action (disable to speed up building)'
        required: true
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id    
    container:
      image: ghcr.io/catthehacker/ubuntu:runner-18.04
      volumes:
        - /:/host_root
    env:
      GITHUB_TOKEN: ${{ secrets.amster }}
      LC_ALL: "C.UTF-8"
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: false
    permissions:
      contents: write
    steps:
    - name: Display Run Parameters
      run:  |
        echo "::group::User Environment Variables"
        echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
        echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
        echo "Device Tree URL: ${{ github.event.inputs.DEVICE_TREE_URL }}"
        echo "Device Tree Branch: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}"
        echo "Device Path: ${{ github.event.inputs.DEVICE_PATH }}"
        echo "Device Name: ${{ github.event.inputs.DEVICE_NAME }}"
        echo "Makefile Name: ${{ github.event.inputs.MAKEFILE_NAME }}"
        if [ ${{ github.event.inputs.CLEANUP }} == true ]; then echo "Cleanup: Enabled"; else echo "Cleanup: Disabled"; fi
        echo "::endgroup::"

    - name: Prepare the environment
      run:  |
        sudo apt update
        sudo apt install libc6
        sudo apt -y upgrade
        sudo apt install -yq aptitude bc bison build-essential curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev python bash tmux

    - name: Upgrade GLIBC to 2.28
      run: |
        sudo sed -i '$a deb http://security.debian.org/debian-security buster/updates main' /etc/apt/sources.list
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 112695A0E562B32A 54404762BBB6E853
        sudo apt update
        sudo apt install libc6 -y
        sudo sed -i '$d' /etc/apt/sources.list
 
    - name: Check Out
      uses: actions/checkout@v4

    # Cleanup The Actions Workspace Using Custom Composite Run Actions
    - name: Cleanup
      run: | 
        sudo cp scripts/cleanup.sh /host_root/root
        sudo chroot /host_root /root/cleanup.sh
      if: ${{ inputs.CLEANUP }}
      # That's it! Now use your normal steps

    - name: Install OpenJDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Setup SSH Keys
      if: ${{ startsWith(github.event.inputs.MANIFEST_URL, 'git@github.com') }}
      uses: webfactory/ssh-agent@v0.5.4
      with:
          ssh-private-key: |
              ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Install repo
      run: |
        sudo ln -sf /usr/bin/python3 /usr/bin/python
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo
      
    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        git config --global user.name "vados-dev"
        git config --global user.email "vados@vados.ru"
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
        sed -i 's/android_system_core/android_system_core_old/' .repo/manifests/omni-aosp.xml ;
        sed -i 's/android_frameworks_base/android_frameworks_base_old/' .repo/manifests/omni-aosp.xml ;
        sed -i 's/android_frameworks_base/android_frameworks_base_old/g' .repo/manifests/remove-minimal.xml ;
        sed -i 's/android_frameworks_base/android_frameworks_base_old/' .repo/manifests/twrp-extras.xml ;
      id: pwd
          
    - name: Repo Sync
      run: |
        repo sync -j$(nproc --all) --force-sync
      working-directory: workspace
      
    - name: Clone device tree
      run: |
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Clone common tree
      if: |
        github.event.inputs.COMMON_TREE_URL != null
        && github.event.inputs.COMMON_PATH != null
      run: |
        git clone ${{ github.event.inputs.COMMON_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.COMMON_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Sync Device Dependencies
      run: |
        bash ${GITHUB_WORKSPACE}/scripts/convert.sh ${{ github.event.inputs.DEVICE_PATH }}/${{ steps.buildtree.outputs.value }}.dependencies
        repo sync -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}
      continue-on-error: true

#    - name: Set Swap Space
#      uses: pierotofy/set-swap-space@master
#      with:
#        swap-size-gb: 12

    - name: Switch to Python2
      run: |
        sudo rm -f /usr/bin/python /usr/bin/python3.6 /usr/bin/python3.6m /usr/local/bin/python
        sudo ln -sf /usr/bin/python2.7 /usr/bin/python
      continue-on-error: true

#    - name: Downgrade GLIBC to 2.27
#      run: |
#        sudo aptitude update
#        echo -e "n\n\n\n" | sudo aptitude install libc6=2.27-3ubuntu1.6

#    - name: Setup tmate session
#      uses: mxschmitt/action-tmate@v3
#      if: ${{ failure() }}
    
    - name: Building recovery
      shell: bash
      run: |
        if [ ${{ inputs.MANIFEST_BRANCH }} == twrp-5.1 ]; then patch -p1 < ../patches/partition.cpp.patch; fi
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng && make clean && make pbrp -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: | 
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/recovery.img
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*vendor*.img
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ github.event.inputs.MANIFEST_BRANCH }}
          Device: ${{ github.event.inputs.DEVICE_NAME }}
          Device tree & Branch: ${{ github.event.inputs.DEVICE_TREE_URL }} - ${{ github.event.inputs.DEVICE_TREE_BRANCH }}
          
